version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: subscription_tracker_db
    environment:
      POSTGRES_DB: subscription_tracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - subscription_tracker_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d subscription_tracker"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: subscription_tracker_backend
    environment:
      DATABASE_URL: postgres://postgres:password@postgres:5432/subscription_tracker?sslmode=disable
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      PORT: 8080
      AI_SERVICE_URL: http://ai-service:8000
      FRONTEND_URL: http://localhost:3000
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - subscription_tracker_network
    restart: unless-stopped

  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: subscription_tracker_ai
    ports:
      - "8000:8000"
    networks:
      - subscription_tracker_network
    restart: unless-stopped

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile.frontend
    container_name: subscription_tracker_frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080/api
    depends_on:
      - backend
    networks:
      - subscription_tracker_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  subscription_tracker_network:
    driver: bridge